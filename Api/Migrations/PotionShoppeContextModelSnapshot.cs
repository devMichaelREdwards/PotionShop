// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(PotionShoppeContext))]
    partial class PotionShoppeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Name")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Password")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Username")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64D8154FFD7E");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("Api.Models.Effect", b =>
                {
                    b.Property<int>("EffectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EffectId"));

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.HasKey("EffectId")
                        .HasName("PK__Effect__6B859F23B4842032");

                    b.ToTable("Effect", (string)null);
                });

            modelBuilder.Entity("Api.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateOnly?>("DateHired")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateTerminated")
                        .HasColumnType("date");

                    b.Property<int?>("EmployeePositionId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Password")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Username")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04F111E192696");

                    b.HasIndex("EmployeePositionId");

                    b.HasIndex("EmployeeStatusId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("Api.Models.EmployeePosition", b =>
                {
                    b.Property<int>("EmployeePositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeePositionId"));

                    b.Property<string>("Title")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.HasKey("EmployeePositionId")
                        .HasName("PK__Employee__6FDE90608211D274");

                    b.ToTable("EmployeePosition", (string)null);
                });

            modelBuilder.Entity("Api.Models.EmployeeStatus", b =>
                {
                    b.Property<int>("EmployeeStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeStatusId"));

                    b.Property<string>("Title")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.HasKey("EmployeeStatusId")
                        .HasName("PK__Employee__3609932CFFE47B28");

                    b.ToTable("EmployeeStatus", (string)null);
                });

            modelBuilder.Entity("Api.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<int?>("Cost")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentStock")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<int?>("EffectId")
                        .HasColumnType("int");

                    b.Property<int?>("Image")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.HasKey("IngredientId")
                        .HasName("PK__Ingredie__BEAEB25AD0ADB01F");

                    b.HasIndex("EffectId");

                    b.ToTable("Ingredient", (string)null);
                });

            modelBuilder.Entity("Api.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DatePlaced")
                        .HasColumnType("date");

                    b.Property<string>("OrderNumber")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<int?>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.HasKey("OrderId")
                        .HasName("PK__Order__C3905BCF73F1FB28");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderStatusId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Api.Models.OrderPotion", b =>
                {
                    b.Property<int>("OrderPotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderPotionId"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("PotionId")
                        .HasColumnType("int");

                    b.HasKey("OrderPotionId")
                        .HasName("PK__OrderPot__492115791E886E61");

                    b.HasIndex("OrderId");

                    b.HasIndex("PotionId");

                    b.ToTable("OrderPotions");
                });

            modelBuilder.Entity("Api.Models.OrderStatus", b =>
                {
                    b.Property<int>("OrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderStatusId"));

                    b.Property<string>("Title")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.HasKey("OrderStatusId")
                        .HasName("PK__OrderSta__BC674CA10766E817");

                    b.ToTable("OrderStatus", (string)null);
                });

            modelBuilder.Entity("Api.Models.Potion", b =>
                {
                    b.Property<int>("PotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PotionId"));

                    b.Property<int?>("Cost")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentStock")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Name")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.HasKey("PotionId")
                        .HasName("PK__Potion__37C41B07D900FFC5");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Potion", (string)null);
                });

            modelBuilder.Entity("Api.Models.PotionEffect", b =>
                {
                    b.Property<int>("PotionEffectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PotionEffectId"));

                    b.Property<int?>("EffectId")
                        .HasColumnType("int");

                    b.Property<int?>("PotionId")
                        .HasColumnType("int");

                    b.HasKey("PotionEffectId")
                        .HasName("PK__PotionEf__57036DA83F8897E4");

                    b.HasIndex("EffectId");

                    b.HasIndex("PotionId");

                    b.ToTable("PotionEffect", (string)null);
                });

            modelBuilder.Entity("Api.Models.Receipt", b =>
                {
                    b.Property<int>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptId"));

                    b.Property<DateOnly?>("DateFulfilled")
                        .HasColumnType("date");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiptNumber")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.HasKey("ReceiptId")
                        .HasName("PK__Receipt__CC08C420D945D5F2");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OrderId");

                    b.ToTable("Receipt", (string)null);
                });

            modelBuilder.Entity("Api.Models.Employee", b =>
                {
                    b.HasOne("Api.Models.EmployeePosition", "EmployeePosition")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeePositionId")
                        .HasConstraintName("FK__Employee__Positi__3B75D760");

                    b.HasOne("Api.Models.EmployeeStatus", "EmployeeStatus")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeStatusId")
                        .HasConstraintName("FK__Employee__Employ__3A81B327");

                    b.Navigation("EmployeePosition");

                    b.Navigation("EmployeeStatus");
                });

            modelBuilder.Entity("Api.Models.Ingredient", b =>
                {
                    b.HasOne("Api.Models.Effect", "Effect")
                        .WithMany("Ingredients")
                        .HasForeignKey("EffectId")
                        .HasConstraintName("FK__Ingredien__Effec__4222D4EF");

                    b.Navigation("Effect");
                });

            modelBuilder.Entity("Api.Models.Order", b =>
                {
                    b.HasOne("Api.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Order__CustomerI__46E78A0C");

                    b.HasOne("Api.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .HasConstraintName("FK__Order__OrderStat__47DBAE45");

                    b.Navigation("Customer");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("Api.Models.OrderPotion", b =>
                {
                    b.HasOne("Api.Models.Potion", "Order")
                        .WithMany("OrderPotionOrders")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderPoti__Order__5629CD9C");

                    b.HasOne("Api.Models.Potion", "Potion")
                        .WithMany("OrderPotionPotions")
                        .HasForeignKey("PotionId")
                        .HasConstraintName("FK__OrderPoti__Potio__5535A963");

                    b.Navigation("Order");

                    b.Navigation("Potion");
                });

            modelBuilder.Entity("Api.Models.Potion", b =>
                {
                    b.HasOne("Api.Models.Employee", "Employee")
                        .WithMany("Potions")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__Potion__Employee__4E88ABD4");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Api.Models.PotionEffect", b =>
                {
                    b.HasOne("Api.Models.Effect", "Effect")
                        .WithMany("PotionEffects")
                        .HasForeignKey("EffectId")
                        .HasConstraintName("FK__PotionEff__Effec__52593CB8");

                    b.HasOne("Api.Models.Potion", "Potion")
                        .WithMany("PotionEffects")
                        .HasForeignKey("PotionId")
                        .HasConstraintName("FK__PotionEff__Potio__5165187F");

                    b.Navigation("Effect");

                    b.Navigation("Potion");
                });

            modelBuilder.Entity("Api.Models.Receipt", b =>
                {
                    b.HasOne("Api.Models.Employee", "Employee")
                        .WithMany("Receipts")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__Receipt__Employe__4AB81AF0");

                    b.HasOne("Api.Models.Order", "Order")
                        .WithMany("Receipts")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Receipt__OrderId__4BAC3F29");

                    b.Navigation("Employee");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Api.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Api.Models.Effect", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("PotionEffects");
                });

            modelBuilder.Entity("Api.Models.Employee", b =>
                {
                    b.Navigation("Potions");

                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("Api.Models.EmployeePosition", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Api.Models.EmployeeStatus", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Api.Models.Order", b =>
                {
                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("Api.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Api.Models.Potion", b =>
                {
                    b.Navigation("OrderPotionOrders");

                    b.Navigation("OrderPotionPotions");

                    b.Navigation("PotionEffects");
                });
#pragma warning restore 612, 618
        }
    }
}
